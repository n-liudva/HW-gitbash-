 4. Создать внешний репозиторий c названием JSON. +
 5. Клонировать репозиторий JSON на локальный компьютер. - git clone 
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add new.json
 8. Закоммитить файл. - git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий. - git push 
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new.json 
{
        "ФИО":"Людва Назарий Викторович",
        "Возраст": 19,
        "Количество домашних животных": 0,
        "Будущая желаемая зарплата" : "5000$"

}

 11. Отправить изменения на внешний репозиторий. - git push 
 12. Создать файл preferences.json - vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
{
	"Любимый фильм":"Мстители",
	"Любимый сериал":"Черное зеркало",
	"Любимая еда":"Пицца, картошка Фрии",
	"Любимое время года":"Лето",
	"Страна которую хотел бы посетить":"Австралия"

}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
{
	"Написание информации в формате JSON"
	"Работа с JSON файлами"
}
 15. Отправить сразу 2 файла на внешний репозиторий. - git commit -am "added information in 2 files", git push
 16. На веб интерфейсе создать файл bug_report.json. + 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. +
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 20. Синхронизировать внешний и локальный репозиторий JSON - git fetch, git pull


XML
 21. Создать внешний репозиторий c названием XML. +
 22. Клонировать репозиторий XML на локальный компьютер. - git clone https://github.com/n-liudva/XML.git
 23. Внутри локального XML создать файл “new.xml”. - touch new.xml
 24. Добавить файл под гит. git add new.xml
 25. Закоммитить файл. - git commit -m "add new.xml" 
 26. Отправить файл на внешний GitHub репозиторий. - git push 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<xml>
	<ФИО>"Людва Назарий Викторович"</ФИО>
	<Возраст> 19 <Возраст>
	<Количество домашних животных> 0 </Количество домашних животных>
	<Будущая желаемая зарплата> "5000$" </Будущая желаемая зарплата>

 28. Отправить изменения на внешний репозиторий. - git add, git commit am "changed information", git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<xml>
	<Любимый фильм>"Мстители"</Любимый фильм>
	<Любимый сериал> "Черное зеркало"</Любимый сериал>
	<Любимая еда> "Бургер" </Любимая еда>
	<Любимое время> "Лето" </Любимое время>
	<Страна которую хотел бы посетить> "Германия" </Страна которую хотел бы посетить>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - vim skills.xml
 32. Сделать коммит в одну строку. - git commit -am "added information in 2 files"
 33. Отправить сразу 2 файла на внешний репозиторий. - git push 
 34. На веб интерфейсе создать файл bug_report.xml. +
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. +
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 38. Синхронизировать внешний и локальный репозиторий XML - git fetch, git pull

TXT
 1. Создать внешний репозиторий c названием TXT. + 
 2. Клонировать репозиторий TXT на локальный компьютер. - git clone https://github.com/n-liudva/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. - touch new.txt
 4. Добавить файл под гит. - git add new.txt
 5. Закоммитить файл. - git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий. - git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - vim new.txt 

1) ФИО - Людва Назарий Викторович
2) Возраст - 19 
3) Количество домашних животных - 1
4) Будущая желаемая зарплата - 2000$

 8. Отправить изменения на внешний репозиторий. git commit -am "changed information", git push
 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. vim preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch skills.txt
 12. Сделать коммит в одну строку. - git commit -am "create 2 files"
 13. Отправить сразу 2 файла на внешний репозиторий. - git push
 14. На веб интерфейсе создать файл bug_report.txt. + 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. + 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. +
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 18. Синхронизировать внешний и локальный репозиторий TXT +